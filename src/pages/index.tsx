import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { SignIn, SignOutButton } from "@clerk/nextjs";
import { SignInButton } from "@clerk/nextjs";
import { useUser } from "@clerk/nextjs";

import { api, RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage, LoadingSpinner } from "~/compnents/loading";
import { useState } from "react";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  const [input, setInput] = useState("");

  const { mutate } = api.posts.create.useMutation();

  console.log(user);
  if (!user) return null;

  const gap = 3;
  const imageSize = 16;

  return (
    <div className="flex w-full gap-3">
      <img
        className="h-16 w-16 rounded-full"
        src={user.profileImageUrl}
        alt="Profile image"
      ></img>
      <input
        placeholder="Type something"
        className="grow bg-transparent outline-none"
        type="text"
        value={input}
        onChange={(e) => setInput(e.target.value)}
      />
      <button onClick={() => mutate({content:input})}>Post</button>
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author.profilePicture}
        className="h-16 w-16 rounded-full"
        alt={`@${author.name}`}
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-2 text-slate-300">
          <span className="font-bold">{`@${author.name}`}</span> <span>|</span>{" "}
          <span>{dayjs(post.createdAt).fromNow()}</span>
        </div>
        <div className="flex-grow">{post.content}</div>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <LoadingPage />;

  if (!data) return <div>Something wrong</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400 p-4">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            <div>
              {user.isSignedIn && <CreatePostWizard></CreatePostWizard>}
            </div>
          </div>
          <div className="flex flex-col">
            {[...data, ...data].map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
